{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"site":{"siteMetadata":{"ver":"3.0"}},"index":{"edges":[{"node":{"name":"-Button","base":"-Button.md"}},{"node":{"name":"-Grid","base":"-Grid.md"}},{"node":{"name":"-Input","base":"-Input.md"}},{"node":{"name":"-Layout","base":"-Layout.md"}},{"node":{"name":"-Toast","base":"-Toast.md"}},{"node":{"name":"-Widget","base":"-Widget.md"}},{"node":{"name":"CAlert","base":"CAlert.md"}},{"node":{"name":"CBadge","base":"CBadge.md"}},{"node":{"name":"CBreadcrumb","base":"CBreadcrumb.md"}},{"node":{"name":"CCallout","base":"CCallout.md"}},{"node":{"name":"CCard","base":"CCard.md"}},{"node":{"name":"CCarousel","base":"CCarousel.md"}},{"node":{"name":"CCharts","base":"CCharts.md"}},{"node":{"name":"CCollapse","base":"CCollapse.md"}},{"node":{"name":"CCreateElement","base":"CCreateElement.md"}},{"node":{"name":"CDataTable","base":"CDataTable.md"}},{"node":{"name":"CDropdown","base":"CDropdown.md"}},{"node":{"name":"CElementCover","base":"CElementCover.md"}},{"node":{"name":"CEmbed","base":"CEmbed.md"}},{"node":{"name":"CFade","base":"CFade.md"}},{"node":{"name":"CForm","base":"CForm.md"}},{"node":{"name":"CIcon","base":"CIcon.md"}},{"node":{"name":"CImg","base":"CImg.md"}},{"node":{"name":"CJumbotron","base":"CJumbotron.md"}},{"node":{"name":"CLink","base":"CLink.md"}},{"node":{"name":"CListGroup","base":"CListGroup.md"}},{"node":{"name":"CMedia","base":"CMedia.md"}},{"node":{"name":"CModal","base":"CModal.md"}},{"node":{"name":"CNav","base":"CNav.md"}},{"node":{"name":"CNavbar","base":"CNavbar.md"}},{"node":{"name":"CPagination","base":"CPagination.md"}},{"node":{"name":"CPopover","base":"CPopover.md"}},{"node":{"name":"CProgress","base":"CProgress.md"}},{"node":{"name":"CSpinner","base":"CSpinner.md"}},{"node":{"name":"CSwitch","base":"CSwitch.md"}},{"node":{"name":"CTabs","base":"CTabs.md"}},{"node":{"name":"CToggler","base":"CToggler.md"}},{"node":{"name":"CTooltip","base":"CTooltip.md"}}]},"allMarkdownRemark":{"nodes":[{"html":"<h2>CoreUI React 3</h2>\n<p>Welcome to CoreUI 3 Doc.</p>","parent":{"__typename":"File","name":"index","sourceInstanceName":"page"}},{"html":"<h2>Introduction</h2>\n<p><a href=\"https://www.npmjs.com/package/@coreui/react\"><img src=\"https://img.shields.io/badge/@coreui%20-react-lightgrey.svg?style=flat-square\" alt=\"@coreui react\"></a>\n<a href=\"https://www.npmjs.com/package/@coreui/react\"><img src=\"https://img.shields.io/npm/v/@coreui/react.png?style=flat-square\" alt=\"npm package\"></a>\n<a href=\"https://www.npmjs.com/package/@coreui/react\"><img src=\"https://img.shields.io/npm/dm/@coreui/react.svg?style=flat-square\" alt=\"NPM downloads\"></a></p>\n<h3><a href=\"https://coreui.io/react\">CoreUI v3 for React</a> components library features</h3>\n<ul>\n<li>All components are React hook components (functional components)</li>\n<li>New context api used</li>\n<li>CoreUI doesn't use Reactstrap anymore</li>\n<li>One naming convention across all components (for beta version - 90% coverage)</li>\n<li>TypeScript type definitions</li>\n</ul>\n<p>More:</p>\n<ul>\n<li>InnerRef prop is available for all components</li>\n<li>\n<p>For complex components you can use additional parameters like for example for link sub component:</p>\n<ul>\n<li>some components have additional props inherited from linkProps</li>\n</ul>\n</li>\n</ul>\n<h3>Demo</h3>\n<p><a href=\"https://coreui.io/react/demo/\">CoreUI Pro for React - Demo</a></p>\n<h3>DOM communication</h3>\n<ul>\n<li>No</li>\n</ul>\n<h3>SSR</h3>\n<ul>\n<li>Compatible</li>\n</ul>\n<hr>\n<h4>Helper functions</h4>\n<p>You have access to a list of helper functions.</p>","parent":{"__typename":"File","name":"introduction","sourceInstanceName":"page"}},{"html":"","parent":{"__typename":"File","name":"CElementCover","sourceInstanceName":"partCommon"}},{"html":"<p>Versatile button component.</p>","parent":{"__typename":"File","name":"-Button","sourceInstanceName":"partCommon"}},{"html":"<p>Grid components.</p>","parent":{"__typename":"File","name":"-Grid","sourceInstanceName":"partCommon"}},{"html":"<p>Input components.</p>","parent":{"__typename":"File","name":"-Input","sourceInstanceName":"partCommon"}},{"html":"<p>Set of widgets.</p>","parent":{"__typename":"File","name":"-Widget","sourceInstanceName":"partCommon"}},{"html":"<p>CoreUI grid components.</p>","parent":{"__typename":"File","name":"-Layout","sourceInstanceName":"partCommon"}},{"html":"<p>Notification components.</p>","parent":{"__typename":"File","name":"-Toast","sourceInstanceName":"partCommon"}},{"html":"<p>React alerts give contextual feedback information for common user operations. Component is delivered with a bunch of usable and adjustable alert messages.</p>","parent":{"__typename":"File","name":"CAlert","sourceInstanceName":"partCommon"}},{"html":"<p>React badges are small count and labeling components.</p>","parent":{"__typename":"File","name":"CBadge","sourceInstanceName":"partCommon"}},{"html":"<p>Simple callout component.</p>","parent":{"__typename":"File","name":"CCallout","sourceInstanceName":"partCommon"}},{"html":"<p>React carousel is a slideshow component for cycling through elements.</p>","parent":{"__typename":"File","name":"CCarousel","sourceInstanceName":"partCommon"}},{"html":"<p>React cards component provide a flexible and extensible container for displaying content. React cards are delivered with a bunch of variants and options.</p>","parent":{"__typename":"File","name":"CCard","sourceInstanceName":"partCommon"}},{"html":"<p>Library: @coreui/react-chartjs</p>","parent":{"__typename":"File","name":"CCharts","sourceInstanceName":"partCommon"}},{"html":"<p>Render html based on information from an array of objects.</p>","parent":{"__typename":"File","name":"CCreateElement","sourceInstanceName":"partCommon"}},{"html":"<p>React collapse component toggles the visibility of content across your project with a few classes and some scripts. Useful for a large amount of content.</p>","parent":{"__typename":"File","name":"CCollapse","sourceInstanceName":"partCommon"}},{"html":"<p>React breadcrumb navigation component which indicates the current location within a navigational hierarchy that automatically adds separators.</p>","parent":{"__typename":"File","name":"CBreadcrumb","sourceInstanceName":"partCommon"}},{"html":"<p>Advanced data table.</p>","parent":{"__typename":"File","name":"CDataTable","sourceInstanceName":"partCommon"}},{"html":"<p>React dropdown component allows you to toggle contextual overlays for displaying lists, links, and more html elements.</p>","parent":{"__typename":"File","name":"CDropdown","sourceInstanceName":"partCommon"}},{"html":"<p>Create responsive video or slideshow embeds based on the width of the parent by creating an intrinsic ratio that scales on any device.</p>","parent":{"__typename":"File","name":"CEmbed","sourceInstanceName":"partCommon"}},{"html":"<p>Fade effect component.</p>","parent":{"__typename":"File","name":"CFade","sourceInstanceName":"partCommon"}},{"html":"<p>React forms support the following form controls: input, textarea, button, checkbox, radio, and select. Learn how to build various types of form layouts such as vertical form, horizontal form and inline from quickly and easily with the CoreUI.</p>","parent":{"__typename":"File","name":"CForm","sourceInstanceName":"partCommon"}},{"html":"<p>Library: @coreui/icons-react</p>\n<p>Component used to implement CoreUI svg icons.</p>","parent":{"__typename":"File","name":"CIcon","sourceInstanceName":"partCommon"}},{"html":"<p>Image component.</p>","parent":{"__typename":"File","name":"CImg","sourceInstanceName":"partCommon"}},{"html":"<p>React Jumbotron component indicates a big grey box for showcasing hero unit style content.\nA lightweight, flexible React component that can optionally reach the entire viewport to showcase essential marketing information on your site.</p>","parent":{"__typename":"File","name":"CJumbotron","sourceInstanceName":"partCommon"}},{"html":"<p>React link component (a or NavLink).</p>","parent":{"__typename":"File","name":"CLink","sourceInstanceName":"partCommon"}},{"html":"<p>React List Groups allows displaying are a series of content.</p>","parent":{"__typename":"File","name":"CListGroup","sourceInstanceName":"partCommon"}},{"html":"<p>Documentation and examples for React's media object to construct highly repetitive components like blog comments, tweets, and the like.</p>","parent":{"__typename":"File","name":"CMedia","sourceInstanceName":"partCommon"}},{"html":"<p>Modal window component.</p>","parent":{"__typename":"File","name":"CModal","sourceInstanceName":"partCommon"}},{"html":"<p>React Nav component allows to create simple navigation. Learn how to use React Nav to quickly and easily create elegant and flexible navs.</p>","parent":{"__typename":"File","name":"CNav","sourceInstanceName":"partCommon"}},{"html":"<p>Documentation and examples for React's powerful, responsive navigation header, the navbar. Includes support for branding, navigation, and more, including support for our collapse plugin.</p>","parent":{"__typename":"File","name":"CNavbar","sourceInstanceName":"partCommon"}},{"html":"<p>React pagination component consists of button-like styled links, that are arranged side by side in a horizontal list. Learn how to create nice looking pagination to navigate through pages easily.</p>","parent":{"__typename":"File","name":"CPagination","sourceInstanceName":"partCommon"}},{"html":"<p>React popovers component to adding iPhone and iPad like popovers to any element on your page. </p>","parent":{"__typename":"File","name":"CPopover","sourceInstanceName":"partCommon"}},{"html":"<p>Progress bars component can be used for showing the progress of a task or action to the users. Progress supports for stacked bars, animated backgrounds, and text labels.</p>","parent":{"__typename":"File","name":"CProgress","sourceInstanceName":"partCommon"}},{"html":"<p>Indicate the loading state of a component or page with React spinners.</p>","parent":{"__typename":"File","name":"CSpinner","sourceInstanceName":"partCommon"}},{"html":"<p>React switch component.</p>","parent":{"__typename":"File","name":"CSwitch","sourceInstanceName":"partCommon"}},{"html":"<p>Tabs components.</p>","parent":{"__typename":"File","name":"CTabs","sourceInstanceName":"partCommon"}},{"html":"<p>Wrapper component for toggling button. Use 'inNavbar'/'inHeader' styling or pass your custom styling.</p>","parent":{"__typename":"File","name":"CToggler","sourceInstanceName":"partCommon"}},{"html":"<p>CTooltip is directive, which display tooltip over element, built on top of tooltip.js (popper.js) library. Tooltip is triggered on hover.</p>","parent":{"__typename":"File","name":"CTooltip","sourceInstanceName":"partCommon"}},{"html":"","parent":{"__typename":"File","name":"CBreadcrumbItem","sourceInstanceName":"partReact"}},{"html":"","parent":{"__typename":"File","name":"CButton","sourceInstanceName":"partReact"}},{"html":"","parent":{"__typename":"File","name":"CCallout","sourceInstanceName":"partReact"}},{"html":"","parent":{"__typename":"File","name":"CCol","sourceInstanceName":"partReact"}},{"html":"","parent":{"__typename":"File","name":"CContainer","sourceInstanceName":"partReact"}},{"html":"","parent":{"__typename":"File","name":"CFade","sourceInstanceName":"partReact"}},{"html":"","parent":{"__typename":"File","name":"CFooter","sourceInstanceName":"partReact"}},{"html":"","parent":{"__typename":"File","name":"CForm","sourceInstanceName":"partReact"}},{"html":"","parent":{"__typename":"File","name":"CCharts","sourceInstanceName":"partReact"}},{"html":"","parent":{"__typename":"File","name":"CIconRaw","sourceInstanceName":"partReact"}},{"html":"","parent":{"__typename":"File","name":"CInputCheckbox","sourceInstanceName":"partReact"}},{"html":"","parent":{"__typename":"File","name":"CInputFile","sourceInstanceName":"partReact"}},{"html":"","parent":{"__typename":"File","name":"CInputRadio","sourceInstanceName":"partReact"}},{"html":"","parent":{"__typename":"File","name":"CNavbar","sourceInstanceName":"partReact"}},{"html":"","parent":{"__typename":"File","name":"CPopover","sourceInstanceName":"partReact"}},{"html":"","parent":{"__typename":"File","name":"CPopperContent","sourceInstanceName":"partReact"}},{"html":"","parent":{"__typename":"File","name":"CPopperTargetHelper","sourceInstanceName":"partReact"}},{"html":"","parent":{"__typename":"File","name":"CRow","sourceInstanceName":"partReact"}},{"html":"","parent":{"__typename":"File","name":"CTable","sourceInstanceName":"partReact"}},{"html":"","parent":{"__typename":"File","name":"CTextarea","sourceInstanceName":"partReact"}},{"html":"","parent":{"__typename":"File","name":"CToast","sourceInstanceName":"partReact"}},{"html":"","parent":{"__typename":"File","name":"CToggler","sourceInstanceName":"partReact"}},{"html":"","parent":{"__typename":"File","name":"CWidgets","sourceInstanceName":"partReact"}},{"html":"<h2># Features</h2>\n<ul>\n<li>Temporary or constant visibility</li>\n<li>Optionally dismissible by user</li>\n<li>Optional fading effect</li>\n<li>When visible temporary timer can be tracked and displayed (i.e. via Progress component)</li>\n</ul>","parent":{"__typename":"File","name":"CAlert","sourceInstanceName":"partReact"}},{"html":"<h2># Features</h2>\n<ul>\n<li>Styling determined by color property</li>\n<li>Optional pill shape</li>\n<li>If 'to' or 'href' prop is passed Badge gain behavior of link (is rendered as badge CLink) and gains all props and options of CLink component</li>\n</ul>","parent":{"__typename":"File","name":"CBadge","sourceInstanceName":"partReact"}},{"html":"<h2># Features</h2>\n<ul>\n<li>Optional customization of styles</li>\n<li>Ready to implement React-router based</li>\n</ul>","parent":{"__typename":"File","name":"CBreadcrumb","sourceInstanceName":"partReact"}},{"html":"<p>This is the wrapper component for CBreadcrumb. It will render breadcrumb items based on current React-router route. Props are the same as in CBreadcrumb, except you cannot pass items.</p>","parent":{"__typename":"File","name":"CBreadcrumbRouter","sourceInstanceName":"partReact"}},{"html":"<p>Wrapper component for button groups.</p>","parent":{"__typename":"File","name":"CButtonGroup","sourceInstanceName":"partReact"}},{"html":"<p>Simple button toolbar component.</p>","parent":{"__typename":"File","name":"CButtonToolbar","sourceInstanceName":"partReact"}},{"html":"<h2># Features</h2>\n<ul>\n<li>Wrapper components covering bootstrap card components</li>\n<li>Style components easily by props</li>\n<li>Custom card-accents styling</li>\n</ul>","parent":{"__typename":"File","name":"CCard","sourceInstanceName":"partReact"}},{"html":"<p>Component for card grouping.</p>","parent":{"__typename":"File","name":"CCardGroup","sourceInstanceName":"partReact"}},{"html":"<p>Component for placing image in card. Component inherits functionality from the CImg component.</p>","parent":{"__typename":"File","name":"CCardImg","sourceInstanceName":"partReact"}},{"html":"<p>Wrapper component with 'card-img-overlay' class.</p>","parent":{"__typename":"File","name":"CCardImgOverlay","sourceInstanceName":"partReact"}},{"html":"<p>Wrapper component with 'card-subtitle' class.</p>","parent":{"__typename":"File","name":"CCardSubtitle","sourceInstanceName":"partReact"}},{"html":"<p>CCardLink is CLink component with additional 'card-link' class.</p>","parent":{"__typename":"File","name":"CCardLink","sourceInstanceName":"partReact"}},{"html":"<p>Wrapper component with 'card-title' class.</p>","parent":{"__typename":"File","name":"CCardTitle","sourceInstanceName":"partReact"}},{"html":"<p>Wrapper component with 'card-text' class.</p>","parent":{"__typename":"File","name":"CCardText","sourceInstanceName":"partReact"}},{"html":"<h2># Features</h2>\n<ul>\n<li>Slides to next item in intervals</li>\n<li>Item could be an image or other content</li>\n<li>Controlled by arrows and indicators</li>\n</ul>","parent":{"__typename":"File","name":"CCarousel","sourceInstanceName":"partReact"}},{"html":"<h2># Features</h2>\n<ul>\n<li>Collapse animation</li>\n<li>Optional duration and transition effect</li>\n<li>Adapted to use in navbars</li>\n</ul>","parent":{"__typename":"File","name":"CCollapse","sourceInstanceName":"partReact"}},{"html":"<h2># Features</h2>\n<p>All features are optional:</p>\n<ul>\n<li>Filter items by one or all columns</li>\n<li>Sort items by column</li>\n<li>Integrated with CPagination component by default</li>\n<li>Customize style of specific rows, columns and cells,</li>\n<li>Customize display of columns (headers, filter, and items separately) by scoped slots</li>\n<li>Load with initial filters and sorter state</li>\n<li>Loading state visualization</li>\n</ul>","parent":{"__typename":"File","name":"CDataTable","sourceInstanceName":"partReact"}},{"html":"<h2># Features</h2>\n<ul>\n<li>Popper.js based toggleable menu</li>\n<li>Toggling mechanism managed by default</li>\n<li>Fully customizable toggler and menu</li>\n</ul>","parent":{"__typename":"File","name":"CDropdown","sourceInstanceName":"partReact"}},{"html":"<p>Render divider variant of CDropdownItem.</p>","parent":{"__typename":"File","name":"CDropdownDivider","sourceInstanceName":"partReact"}},{"html":"<p>Render header variant of CDropdownItem.</p>","parent":{"__typename":"File","name":"CDropdownHeader","sourceInstanceName":"partReact"}},{"html":"<h2># Features</h2>\n<ul>\n<li>Simple wrapper for external source videos</li>\n<li>Optional aspect ratios</li>\n</ul>","parent":{"__typename":"File","name":"CEmbed","sourceInstanceName":"partReact"}},{"html":"<h2>Features</h2>\n<ul>\n<li>Building standard bootstrap grid structure</li>\n</ul>","parent":{"__typename":"File","name":"CGrid","sourceInstanceName":"partReact"}},{"html":"<h2>Full Description</h2>\n<ul>\n<li><a href=\"/react/docs/3.3/components/CHeader\">CHeader</a></li>\n</ul>","parent":{"__typename":"File","name":"CHeader","sourceInstanceName":"partReact"}},{"html":"<h1>Features</h1>\n<ul>\n<li>Can load icons stored globally, directly passed or by source link,</li>\n<li>Can significantly reduce bundle size due to JavaScript named icons import,</li>\n<li>Full functionality of svg html tag,</li>\n<li>Clean API</li>\n</ul>","parent":{"__typename":"File","name":"CIcon","sourceInstanceName":"partReact"}},{"html":"<h2># Features</h2>\n<ul>\n<li>Easy styling</li>\n<li>Show coloured or transparent blank image (svg) if source of image is not defined. Component can be used as blank svg image permanently or until source of image is passed</li>\n</ul>","parent":{"__typename":"File","name":"CImg","sourceInstanceName":"partReact"}},{"html":"<h2># Features</h2>\n<ul>\n<li>All-in-one input components</li>\n<li>Components share similar API</li>\n<li>Use as basic or advanced customized inputs</li>\n</ul>","parent":{"__typename":"File","name":"CInput","sourceInstanceName":"partReact"}},{"html":"<h2># Features</h2>\n<ul>\n<li>Easily customizable styles</li>\n</ul>","parent":{"__typename":"File","name":"CJumbotron","sourceInstanceName":"partReact"}},{"html":"<h2># Features</h2>\n<ul>\n<li>Linking to external sources or router-links</li>\n<li>If link is empty, component prevents scrolling up the page after clicking</li>\n</ul>\n<p>To turn link into router-link just pass address in 'to' prop instead of 'href'. Then component will become router link extended by base 'CLink' props.</p>","parent":{"__typename":"File","name":"CLink","sourceInstanceName":"partReact"}},{"html":"<h2># Features</h2>\n<ul>\n<li>Automically detect if item is actionable</li>\n<li>If 'to' or 'href' prop is passed to CListGroupItem it gains functionality of CLink component - it gains all props and options of CLink component</li>\n</ul>","parent":{"__typename":"File","name":"CListGroup","sourceInstanceName":"partReact"}},{"html":"<h2># Features</h2>\n<ul>\n<li>Aside element on the left or right side</li>\n<li>Aside element have CImg component functionality by default</li>\n</ul>","parent":{"__typename":"File","name":"CMedia","sourceInstanceName":"partReact"}},{"html":"<h2># Features</h2>\n<ul>\n<li>Many customization options</li>\n<li>Easily manage modal visibility</li>\n</ul>\n<p>Modal is hidding after click on one of following triggers:</p>\n<ul>\n<li>Close button in the default header</li>\n<li>'OK' and 'Cancel' buttons in the footer</li>\n<li>Backdrop (when closeOnBackdrop prop is true)</li>\n</ul>","parent":{"__typename":"File","name":"CModal","sourceInstanceName":"partReact"}},{"html":"<h2># Features</h2>\n<ul>\n<li>Easily customizable</li>\n<li>Compatible with CDropdown component</li>\n</ul>","parent":{"__typename":"File","name":"CNav","sourceInstanceName":"partReact"}},{"html":"<p>Render CBrand with navbar class.</p>","parent":{"__typename":"File","name":"CNavbarBrand","sourceInstanceName":"partReact"}},{"html":"<h2># Features</h2>\n<ul>\n<li>Determine behavior, style and functionality of pagination</li>\n<li>Smart automatic items generation</li>\n</ul>","parent":{"__typename":"File","name":"CPagination","sourceInstanceName":"partReact"}},{"html":"<p>Use as a child component of CProgress when you want to split progress bar into multiple bars. </p>","parent":{"__typename":"File","name":"CProgressBar","sourceInstanceName":"partReact"}},{"html":"<h2># Features</h2>\n<ul>\n<li>Single or splitted progress bar</li>\n<li>Diffrent widths heights and styles available</li>\n<li>Concise syntax for single bar</li>\n</ul>","parent":{"__typename":"File","name":"CProgress","sourceInstanceName":"partReact"}},{"html":"<p>Render CBrand version for sidebar component.</p>","parent":{"__typename":"File","name":"CSidebarBrand","sourceInstanceName":"partReact"}},{"html":"<h2>Full Description</h2>\n<ul>\n<li><a href=\"/react/docs/3.3/components/CSidebar\">CSidebar</a></li>\n</ul>","parent":{"__typename":"File","name":"CSidebar","sourceInstanceName":"partReact"}},{"html":"<p>Render CButtonClose version for sidebar component.</p>","parent":{"__typename":"File","name":"CSidebarClose","sourceInstanceName":"partReact"}},{"html":"<h2># Features</h2>\n<ul>\n<li>Spinning and grow effect</li>\n<li>Fully customizable size</li>\n<li>Screen readers friendly</li>\n</ul>","parent":{"__typename":"File","name":"CSpinner","sourceInstanceName":"partReact"}},{"html":"<h2># Features</h2>\n<ul>\n<li>Many styles and sizes</li>\n<li>Checkbox or radio input mode</li>\n</ul>","parent":{"__typename":"File","name":"CSwitch","sourceInstanceName":"partReact"}},{"html":"<h2>Features</h2>\n<ul>\n<li>Simple to use</li>\n<li>Customizable styling</li>\n<li>Optional fading effect when switching the active tab</li>\n</ul>\n<p>CTab... and CTabs components are tightly coupled which means you using them together is required, for component to work.</p>","parent":{"__typename":"File","name":"CTabs","sourceInstanceName":"partReact"}},{"html":"<h2># Features</h2>\n<ul>\n<li>Simplified implementation of tooltip</li>\n<li>Bootstrap tooltip styling</li>\n</ul>","parent":{"__typename":"File","name":"CTooltip","sourceInstanceName":"partReact"}},{"html":"<h2>@coreui/react v3 for <a href=\"https://coreui.io/react/\">CoreUI 3 for React</a></h2>\n<p><a href=\"https://www.npmjs.com/package/@coreui/react\"><img src=\"https://img.shields.io/npm/v/@coreui/react.png?style=flat-square\" alt=\"npm package\"></a>\n<a href=\"https://www.npmjs.com/package/@coreui/react\"><img src=\"https://img.shields.io/npm/v/@coreui/react/next.png?style=flat-square\" alt=\"npm next\"></a>\n<a href=\"https://www.npmjs.com/package/@coreui/react\"><img src=\"https://img.shields.io/npm/dm/@coreui/react.svg?style=flat-square\" alt=\"NPM downloads\"></a></p>\n<pre><code class=\"language-bash\">npm install @coreui/react@next\n</code></pre>","parent":{"__typename":"File","name":"README","sourceInstanceName":"js"}},{"html":"","parent":{"__typename":"File","name":"README","sourceInstanceName":"js"}}]}},"pageContext":{}}}