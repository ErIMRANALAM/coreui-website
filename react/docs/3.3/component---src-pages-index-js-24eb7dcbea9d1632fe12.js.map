{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["data2","console","pageName","props","html","page","components","node","title","name","path","isActive","state","dangerouslySetInnerHTML","__html"],"mappings":"6JAIe,sBAEb,IAAMA,EAAK,EAAX,KAgCAC,iBAlCwB,IAsCpBC,EAFUC,EApCU,IAuCpBC,EAvCoB,GAkDxB,IAAK,IAAL,KANAF,EAAWA,SAAXA,MACaA,EA7CW,gBAkDNF,oBAAlB,MACE,GAAIA,iEACFA,2CADF,EAC8D,CAC5DI,EAAKJ,6BAALI,KACA,MAKJ,OACE,uBAAQC,KAAR,EAAwBC,WACtBN,EAAA,iBAAsB,cAAoB,IAAlBO,EAAiB,EAAjBA,KASxB,MACE,CACEC,MARJ,MAAID,UACKA,iBADT,cAGSA,cAAPE,GAMEC,KAAM,cAAcH,EAFtB,KAGEI,UAHF,EAIEC,MAAO,CAACH,KAAMF,EAAKE,WAKzB,yBAAKI,wBAAyB,CAACC,OAAQV","file":"component---src-pages-index-js-24eb7dcbea9d1632fe12.js","sourcesContent":["import React from \"react\"\r\nimport { graphql, useStaticQuery } from \"gatsby\"\r\nimport Layout from \"../components/layout\"\r\n\r\nexport default (props) => {\r\n\r\n  const data2 = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            ver\r\n          }\r\n        },\r\n\r\n        index: allFile(filter: {sourceInstanceName: {eq: \"partCommon\"}, relativeDirectory: {eq: \"\"}}, sort: {fields: base}) {\r\n          edges {\r\n            node {\r\n              name\r\n              base\r\n            }\r\n          }\r\n        },\r\n        allMarkdownRemark {\r\n          nodes {\r\n            html\r\n            parent {\r\n              ... on File {\r\n                name\r\n                sourceInstanceName\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n      }\r\n    `\r\n  )\r\n  console.log(props, data2);\r\n\r\n  const {uri} = props;\r\n\r\n  let pageName =  uri;\r\n  let html='';\r\n\r\n  //name = props.path.substr(12);\r\n  //pageName = pageContext.slug;\r\n  //console.log(pageName);\r\n  pageName = pageName.substr(1);\r\n  pageName || (pageName = 'introduction');\r\n\r\n  //for (let index in data2.allMarkdownRemark.nodes)\r\n  //console.log(data2.allMarkdownRemark.nodes[index].parent.name);\r\n\r\n  for (let index in data2.allMarkdownRemark.nodes)\r\n    if (data2.allMarkdownRemark.nodes[index].parent.sourceInstanceName===\"page\" &&\r\n      data2.allMarkdownRemark.nodes[index].parent.name===pageName){\r\n      html=data2.allMarkdownRemark.nodes[index].html;\r\n      break;\r\n    }\r\n\r\n  //console.log(pageName, html);\r\n\r\n  return (\r\n    <Layout page={pageName} components={\r\n      data2.index.edges.map(({node}, index) => {\r\n\r\n      let name;\r\n      if (node.name[0]==='-')\r\n        name = node.name.substr(1) + ' Components';\r\n      else {\r\n        name = node.name.substr(1);\r\n      }\r\n\r\n      return (\r\n        {\r\n          title: name,\r\n          path: 'components/'+node.name,\r\n          isActive: false,\r\n          state: {name: node.name}\r\n        }\r\n      )})\r\n    }>\r\n\r\n    <div dangerouslySetInnerHTML={{__html: html}}></div>\r\n\r\n  </Layout>)\r\n\r\n}\r\n"],"sourceRoot":""}